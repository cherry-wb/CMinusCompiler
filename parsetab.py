
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\x90'd\xa20 [\xfcd\xef\xeb\xc65\x91\x12k"
    
_lr_action_items = {'RETURN':([13,14,29,34,38,40,41,43,44,45,49,53,54,57,60,65,66,68,92,93,111,116,117,120,122,123,124,125,],[-9,-6,-8,-7,-71,-71,-25,-24,47,-27,-32,-28,-26,-30,-29,-23,-31,-38,-33,-39,47,47,-36,-34,47,47,-35,-37,]),'LESS':([51,52,55,56,59,62,64,95,96,97,101,110,113,114,],[73,-64,-59,-63,-65,-44,-55,-54,-63,-44,-62,-58,-45,-66,]),'VOID':([0,2,5,6,8,12,13,14,17,29,32,34,37,38,40,41,43,65,82,],[3,-5,3,-4,-3,-2,-9,-6,23,-8,3,-7,-15,-71,3,-25,-24,-23,3,]),'EQUAL':([11,46,56,62,113,],[15,15,81,-44,-45,]),'LBRACKET':([11,31,46,62,97,],[16,35,16,85,85,]),'WHILE':([13,14,29,34,38,40,41,43,44,45,49,53,54,57,60,65,66,68,92,93,111,116,117,120,122,123,124,125,],[-9,-6,-8,-7,-71,-71,-25,-24,48,-27,-32,-28,-26,-30,-29,-23,-31,-38,-33,-39,48,48,-36,-34,48,48,-35,-37,]),'MINUS':([51,52,55,56,59,62,64,84,95,96,97,98,101,110,113,114,],[79,-64,-59,-63,-65,84,-55,102,-54,-63,-44,79,-62,-58,-45,-66,]),'GREATEREQUAL':([51,52,55,56,59,62,64,95,96,97,101,110,113,114,],[76,-64,-59,-63,-65,-44,-55,-54,-63,-44,-62,-58,-45,-66,]),'RPAREN':([17,22,23,24,25,26,31,36,39,50,51,52,55,56,59,62,64,83,87,94,95,96,97,98,99,101,102,104,105,106,107,108,109,110,113,114,119,121,],[-71,-16,-17,-19,33,-20,-21,-18,-22,-41,-47,-64,-59,-63,-65,-44,-55,101,-71,111,-54,-63,-44,-46,-40,-62,-43,-42,-68,114,-67,-70,116,-58,-45,-66,-69,123,]),'SEMICOLON':([10,11,19,27,28,30,46,47,50,51,52,55,56,59,62,64,67,69,95,96,97,98,99,101,102,104,110,112,113,114,],[13,14,29,-11,-10,34,14,68,-41,-47,-64,-59,-63,-65,-44,-55,92,93,-54,-63,-44,-46,-40,-62,-43,-42,-58,118,-45,-66,]),'COMMA':([11,17,22,24,26,27,31,36,39,46,50,51,52,55,56,59,62,64,95,96,97,98,99,101,102,104,107,108,110,113,114,119,],[18,-71,32,-19,-20,18,-21,-18,-22,18,-41,-47,-64,-59,-63,-65,-44,-55,-54,-63,-44,-46,-40,-62,-43,-42,115,-70,-58,-45,-66,-69,]),'PLUS':([51,52,55,56,59,62,64,86,95,96,97,98,101,110,113,114,],[77,-64,-59,-63,-65,86,-55,104,-54,-63,-44,77,-62,-58,-45,-66,]),'$end':([2,5,6,7,8,12,13,14,29,34,37,65,],[-5,-1,-4,0,-3,-2,-9,-6,-8,-7,-15,-23,]),'DIVIDE':([52,55,56,59,62,64,95,96,97,101,110,113,114,],[-64,-59,-63,-65,-44,90,90,-63,-44,-62,-58,-45,-66,]),'FOR':([13,14,29,34,38,40,41,43,44,45,49,53,54,57,60,65,66,68,92,93,111,116,117,120,122,123,124,125,],[-9,-6,-8,-7,-71,-71,-25,-24,58,-27,-32,-28,-26,-30,-29,-23,-31,-38,-33,-39,58,58,-36,-34,58,58,-35,-37,]),'NUMBER':([13,14,15,16,29,34,38,40,41,43,44,45,47,49,53,54,57,60,61,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,85,87,88,89,90,91,92,93,100,111,115,116,117,118,120,122,123,124,125,],[-9,-6,19,20,-8,-7,-71,-71,-25,-24,59,-27,59,-32,-28,-26,-30,-29,59,-23,-31,-38,59,59,59,-48,-52,-53,-51,-56,-49,-57,-50,59,59,59,59,-60,-61,59,-33,-39,59,59,59,59,-36,59,-34,59,59,-35,-37,]),'ELSE':([49,53,57,60,65,66,68,92,93,117,120,124,125,],[-32,-28,-30,-29,-23,-31,-38,-33,-39,-36,122,-35,-37,]),'LPAREN':([11,13,14,29,34,38,40,41,43,44,45,47,48,49,53,54,57,58,60,61,62,63,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,85,87,88,89,90,91,92,93,97,100,111,115,116,117,118,120,122,123,124,125,],[17,-9,-6,-8,-7,-71,-71,-25,-24,61,-27,61,70,-32,-28,-26,-30,82,-29,61,87,88,-23,-31,-38,61,61,61,-48,-52,-53,-51,-56,-49,-57,-50,61,61,61,61,-60,-61,61,-33,-39,87,61,61,61,61,-36,61,-34,61,61,-35,-37,]),'LESSEQUAL':([51,52,55,56,59,62,64,95,96,97,101,110,113,114,],[78,-64,-59,-63,-65,-44,-55,-54,-63,-44,-62,-58,-45,-66,]),'LBLOCK':([13,14,29,33,34,38,40,41,43,44,45,49,53,54,57,60,65,66,68,92,93,111,116,117,120,122,123,124,125,],[-9,-6,-8,38,-7,-71,-71,-25,-24,38,-27,-32,-28,-26,-30,-29,-23,-31,-38,-33,-39,38,38,-36,-34,38,38,-35,-37,]),'TIMES':([52,55,56,59,62,64,95,96,97,101,110,113,114,],[-64,-59,-63,-65,-44,89,89,-63,-44,-62,-58,-45,-66,]),'ID':([1,3,4,9,13,14,18,21,23,29,34,38,40,41,42,43,44,45,47,49,53,54,57,60,61,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,85,87,88,89,90,91,92,93,100,111,115,116,117,118,120,122,123,124,125,],[11,-14,-13,-12,-9,-6,27,31,-14,-8,-7,-71,-71,-25,46,-24,62,-27,62,-32,-28,-26,-30,-29,62,-23,-31,-38,62,97,97,-48,-52,-53,-51,-56,-49,-57,-50,62,62,62,62,-60,-61,97,-33,-39,62,62,62,62,-36,62,-34,62,62,-35,-37,]),'IF':([13,14,29,34,38,40,41,43,44,45,49,53,54,57,60,65,66,68,92,93,111,116,117,120,122,123,124,125,],[-9,-6,-8,-7,-71,-71,-25,-24,63,-27,-32,-28,-26,-30,-29,-23,-31,-38,-33,-39,63,63,-36,-34,63,63,-35,-37,]),'GREATER':([51,52,55,56,59,62,64,95,96,97,101,110,113,114,],[80,-64,-59,-63,-65,-44,-55,-54,-63,-44,-62,-58,-45,-66,]),'INT':([0,2,5,6,8,12,13,14,17,29,32,34,37,38,40,41,43,65,82,],[9,-5,9,-4,-3,-2,-9,-6,9,-8,9,-7,-15,-71,9,-25,-24,-23,9,]),'DEQUAL':([51,52,55,56,59,62,64,95,96,97,101,110,113,114,],[74,-64,-59,-63,-65,-44,-55,-54,-63,-44,-62,-58,-45,-66,]),'FLOAT':([0,2,5,6,8,12,13,14,17,29,32,34,37,38,40,41,43,65,82,],[4,-5,4,-4,-3,-2,-9,-6,4,-8,4,-7,-15,-71,4,-25,-24,-23,4,]),'DISTINT':([51,52,55,56,59,62,64,95,96,97,101,110,113,114,],[75,-64,-59,-63,-65,-44,-55,-54,-63,-44,-62,-58,-45,-66,]),'RBLOCK':([13,14,29,34,38,40,41,43,44,45,49,53,54,57,60,65,66,68,92,93,117,120,124,125,],[-9,-6,-8,-7,-71,-71,-25,-24,65,-27,-32,-28,-26,-30,-29,-23,-31,-38,-33,-39,-36,-34,-35,-37,]),'RBRACKET':([20,35,50,51,52,55,56,59,62,64,95,96,97,98,99,101,102,103,104,110,113,114,],[30,39,-41,-47,-64,-59,-63,-65,-44,-55,-54,-63,-44,-46,-40,-62,-43,113,-42,-58,-45,-66,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'param_list':([17,],[22,]),'iteration_stmt':([44,111,116,122,123,],[66,66,66,66,66,]),'simple_expression':([44,47,61,70,81,85,87,88,100,111,115,116,118,122,123,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'additive_expression':([44,47,61,70,72,81,85,87,88,100,111,115,116,118,122,123,],[51,51,51,51,98,51,51,51,51,51,51,51,51,51,51,51,]),'type_specifier':([0,5,17,32,40,82,],[1,1,21,21,42,42,]),'param':([17,32,],[24,36,]),'var_declaration':([0,5,40,82,],[6,6,43,100,]),'program':([0,],[7,]),'call':([44,47,61,70,71,72,81,85,87,88,91,100,111,115,116,118,122,123,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'statement':([44,111,116,122,123,],[54,117,120,124,125,]),'factor':([44,47,61,70,71,72,81,85,87,88,91,100,111,115,116,118,122,123,],[55,55,55,55,55,55,55,55,55,55,110,55,55,55,55,55,55,55,]),'var':([44,47,61,70,71,72,81,85,87,88,91,100,111,115,116,118,122,123,],[56,56,56,56,96,96,56,56,56,56,96,56,56,56,56,56,56,56,]),'selection_stmt':([44,111,116,122,123,],[57,57,57,57,57,]),'empty':([17,38,40,87,],[26,41,45,105,]),'addop':([51,98,],[71,71,]),'variosIDs':([1,18,42,],[10,28,10,]),'args':([87,],[106,]),'compount_stmt':([33,44,111,116,122,123,],[37,60,60,60,60,60,]),'args_list':([87,],[107,]),'declaration':([0,5,],[8,12,]),'local_declarations':([38,],[40,]),'term':([44,47,61,70,71,72,81,85,87,88,100,111,115,116,118,122,123,],[64,64,64,64,95,64,64,64,64,64,64,64,64,64,64,64,64,]),'relop':([51,],[72,]),'expression_stmt':([44,111,116,122,123,],[53,53,53,53,53,]),'declaration_list':([0,],[5,]),'fun_declaration':([0,5,],[2,2,]),'mulop':([64,95,],[91,91,]),'params':([17,],[25,]),'statement_list':([40,],[44,]),'return_stmt':([44,111,116,122,123,],[49,49,49,49,49,]),'expression':([44,47,61,70,81,85,87,88,100,111,115,116,118,122,123,],[67,69,83,94,99,103,108,109,112,67,119,67,121,67,67,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','cminus_parser.py',13),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','cminus_parser.py',17),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','cminus_parser.py',18),
  ('declaration -> var_declaration','declaration',1,'p_declaration','cminus_parser.py',22),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','cminus_parser.py',23),
  ('var_declaration -> type_specifier ID SEMICOLON','var_declaration',3,'p_var_declaration','cminus_parser.py',27),
  ('var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON','var_declaration',6,'p_var_declaration','cminus_parser.py',28),
  ('var_declaration -> type_specifier ID EQUAL NUMBER SEMICOLON','var_declaration',5,'p_var_declaration','cminus_parser.py',29),
  ('var_declaration -> type_specifier variosIDs SEMICOLON','var_declaration',3,'p_var_declaration','cminus_parser.py',30),
  ('variosIDs -> ID COMMA variosIDs','variosIDs',3,'p_variosIDs','cminus_parser.py',34),
  ('variosIDs -> ID','variosIDs',1,'p_variosIDs','cminus_parser.py',35),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','cminus_parser.py',39),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','cminus_parser.py',40),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','cminus_parser.py',41),
  ('fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','cminus_parser.py',45),
  ('params -> param_list','params',1,'p_params','cminus_parser.py',49),
  ('params -> VOID','params',1,'p_params','cminus_parser.py',50),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','cminus_parser.py',54),
  ('param_list -> param','param_list',1,'p_param_list','cminus_parser.py',55),
  ('param_list -> empty','param_list',1,'p_param_list','cminus_parser.py',56),
  ('param -> type_specifier ID','param',2,'p_param','cminus_parser.py',60),
  ('param -> type_specifier ID LBRACKET RBRACKET','param',4,'p_param','cminus_parser.py',61),
  ('compount_stmt -> LBLOCK local_declarations statement_list RBLOCK','compount_stmt',4,'p_compount_stmt','cminus_parser.py',65),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations','cminus_parser.py',69),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations','cminus_parser.py',70),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','cminus_parser.py',74),
  ('statement_list -> empty','statement_list',1,'p_statement_list','cminus_parser.py',75),
  ('statement -> expression_stmt','statement',1,'p_statement','cminus_parser.py',80),
  ('statement -> compount_stmt','statement',1,'p_statement','cminus_parser.py',81),
  ('statement -> selection_stmt','statement',1,'p_statement','cminus_parser.py',82),
  ('statement -> iteration_stmt','statement',1,'p_statement','cminus_parser.py',83),
  ('statement -> return_stmt','statement',1,'p_statement','cminus_parser.py',84),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt','cminus_parser.py',94),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt','cminus_parser.py',98),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt','cminus_parser.py',99),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt','cminus_parser.py',103),
  ('iteration_stmt -> FOR LPAREN var_declaration expression SEMICOLON expression RPAREN statement','iteration_stmt',8,'p_iteration_stmt','cminus_parser.py',104),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','cminus_parser.py',109),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','cminus_parser.py',110),
  ('expression -> var EQUAL expression','expression',3,'p_expression','cminus_parser.py',114),
  ('expression -> simple_expression','expression',1,'p_expression','cminus_parser.py',115),
  ('expression -> ID PLUS PLUS','expression',3,'p_expression','cminus_parser.py',116),
  ('expression -> ID MINUS MINUS','expression',3,'p_expression','cminus_parser.py',117),
  ('var -> ID','var',1,'p_var','cminus_parser.py',121),
  ('var -> ID LBRACKET expression RBRACKET','var',4,'p_var','cminus_parser.py',122),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','cminus_parser.py',126),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','cminus_parser.py',127),
  ('relop -> LESS','relop',1,'p_relop','cminus_parser.py',131),
  ('relop -> LESSEQUAL','relop',1,'p_relop','cminus_parser.py',132),
  ('relop -> GREATER','relop',1,'p_relop','cminus_parser.py',133),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','cminus_parser.py',134),
  ('relop -> DEQUAL','relop',1,'p_relop','cminus_parser.py',135),
  ('relop -> DISTINT','relop',1,'p_relop','cminus_parser.py',136),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','cminus_parser.py',140),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','cminus_parser.py',141),
  ('addop -> PLUS','addop',1,'p_addop','cminus_parser.py',145),
  ('addop -> MINUS','addop',1,'p_addop','cminus_parser.py',146),
  ('term -> term mulop factor','term',3,'p_term','cminus_parser.py',150),
  ('term -> factor','term',1,'p_term','cminus_parser.py',151),
  ('mulop -> TIMES','mulop',1,'p_mulop','cminus_parser.py',156),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','cminus_parser.py',157),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','cminus_parser.py',161),
  ('factor -> var','factor',1,'p_factor','cminus_parser.py',162),
  ('factor -> call','factor',1,'p_factor','cminus_parser.py',163),
  ('factor -> NUMBER','factor',1,'p_factor','cminus_parser.py',164),
  ('call -> ID LPAREN args RPAREN','call',4,'p_call','cminus_parser.py',168),
  ('args -> args_list','args',1,'p_args','cminus_parser.py',172),
  ('args -> empty','args',1,'p_args','cminus_parser.py',173),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list_1','cminus_parser.py',177),
  ('args_list -> expression','args_list',1,'p_args_list_1','cminus_parser.py',178),
  ('empty -> <empty>','empty',0,'p_empty','cminus_parser.py',182),
]
